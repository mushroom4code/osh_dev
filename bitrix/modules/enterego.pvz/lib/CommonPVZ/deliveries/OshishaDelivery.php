<?php

namespace CommonPVZ;

use Bitrix\Catalog\StoreTable;
use Bitrix\Main\ArgumentException;
use Bitrix\Main\ObjectPropertyException;
use Bitrix\Main\SystemException;
use Bitrix\Main\Config\Option;
use Bitrix\Main\Entity;
use Bitrix\Sale\Delivery\DeliveryLocationTable;
use Bitrix\Sale\Internals\PersonTypeTable;
use Bitrix\Sale\Location\Connector;
use Bitrix\Sale\Location\LocationTable;
use Bitrix\Sale\Location\Util\Assert;


class OshishaDelivery extends CommonPVZ
{
    static $MODULE_ID = 'enterego.pvz';
    public string $delivery_name = 'Oshisha';
    public string $delivery_code = 'oshisha';

    static public string $code = 'oshisha';
    private $oshisha_cache_id = 'oshisha_delivery_prices';

    static $oshisha_fields = array(
        'active',
        'pvzStrict',
        'address_type',
        'ymaps_key',
        'da_data_token',
        'timeDeliveryEndNight',
        'timeDeliveryStartNight',
        'timeDeliveryStartDay',
        'timeDeliveryEndDay',
        'cost',
    );

    private static function getLocationConnectorsForDoorDelivery() {
        //todo site  id
        if (SITE_ID === 'N2') {
            //moscow
            //moscow and moscow region
            $locationConnectors = ["0000028025","0000073738"];
        } else {
            //ryzan
            //ryazan region and moscow region
            $locationConnectors = ["0000028033", "0000028025"];
        }

        return $locationConnectors;
    }

    private static function getLocationConnectorsForPVZ() {
        //todo site  id
        if (SITE_ID === 'N2') {
            //moscow and moscow region
            $locationConnectors = ["0000073738"];
        } else {
            //ryazan city
            $locationConnectors = ["0000197740"];
        }

        return $locationConnectors;
    }

    /**
     * validate location delivery on moscow or moscow region
     *
     * @param $locationCode string code location for delivery
     * @return bool
     * @throws ArgumentException
     * @throws ObjectPropertyException
     * @throws SystemException
     */
    private static function checkDeliveryLocation(string $locationCode, array $locationConnectors): bool
    {
        $node = LocationTable::getList(
            array(
                'filter' => array('=CODE' => $locationCode),
                'select' => array('ID', 'LEFT_MARGIN', 'RIGHT_MARGIN'),
                'limit' => 1
            )
        )->fetch();
        if (empty($node)) {
            return  false;
        }

        $node = Assert::expectNotEmptyArray($node, '$nodeInfo[]');
        $node['ID'] = Assert::expectIntegerPositive($node['ID'], '$nodeInfo[][ID]');
        $node['LEFT_MARGIN'] = Assert::expectIntegerNonNegative($node['LEFT_MARGIN'], '$nodeInfo[][LEFT_MARGIN]');
        $node['RIGHT_MARGIN'] = Assert::expectIntegerPositive($node['RIGHT_MARGIN'], '$nodeInfo[][RIGHT_MARGIN]');

        $connectors = LocationTable::getList(
            array(
                'filter' => array('=CODE' => $locationConnectors),
                'select' => array('ID', 'LEFT_MARGIN', 'RIGHT_MARGIN'),
            )
        );
        while ($connector = $connectors->fetch()) {
            if($connector['ID'] === $node['ID']) {
                return true;
            } elseif($node['LEFT_MARGIN'] >= $connector['LEFT_MARGIN']
                && $node['RIGHT_MARGIN'] <= $connector['RIGHT_MARGIN']) {

                return true;
            }
        }

        return false;
    }

    public static function getInstanceForDoor($deliveryParams): array
    {
        if (empty(Option::get(DeliveryHelper::$MODULE_ID, 'Oshisha_door_active'))) {
            return [];
        }

        $res = self::checkDeliveryLocation($deliveryParams['location'] ?? '',
            self::getLocationConnectorsForDoorDelivery());

        if ($res) {
            return [new OshishaDelivery()];
        }
        return [];
    }

    public static function getInstanceForPvz($deliveryParams): array
    {
        if (empty(Option::get(DeliveryHelper::$MODULE_ID, 'Oshisha_pvz_active'))) {
            return [];
        }

        $res = self::checkDeliveryLocation($deliveryParams['codeCity'],
            self::getLocationConnectorsForPVZ());

        if ($res) {
            return [new OshishaDelivery()];
        }
        return [];
    }

    public static function getOshishaDataValue($name)
    {
        return Option::get(self::$MODULE_ID, "Oshisha_{$name}");
    }

    public static function getOshishaYMapsKey()
    {
        return self::getOshishaDataValue('ymapskey');
    }

    public static function getOshishaDaDataToken()
    {
        return self::getOshishaDataValue('dadatatoken');
    }

    public static function getOshishaDaDataSecret()
    {
        return self::getOshishaDataValue('dadata_secret');
    }

    public static function getOshishaCost()
    {
        return self::getOshishaDataValue('cost');
    }

    public static function getOshishaStartCost()
    {
        return 299;
    }

    public static function getOshishaLimitBasket(){
        return 4000;
    }

    public function getNoMarkupDays() {
        //todo site id and settings
        if (SITE_ID === 'RZ') {
            return [];
        }

        return [
            ['days' =>explode(',', $this->configs['northdays']),     'color' => 'rgba(154, 251, 0, 0.5)' ],
            ['days' =>explode(',', $this->configs['southeastdays']), 'color' => 'rgba(0, 195, 250, 0.5)' ],
            ['days' =>explode(',', $this->configs['southwestdays']), 'color' => 'rgba(245, 20, 39, 0.5)' ],
        ];
    }

    /** Получает области и способы расчета в разрее филиалов
     * @return array
     */
    public function getOshishaDeliveryRegions(): array
    {
        //todo site id and settings
        if (SITE_ID === 'RZ') {
            return [
                'center_point' => [54.629157, 39.736040],
                'locations' => [['region'=> "Московская"], ['region'=> "Рязанская"]],
                'regions' => [
                    [
                        'name' => 'ryzan',
                        'calculation' => [
                            'type' => 'static',
                            'cost' => 0
                        ],
                        'template' => '{delivery_address} - {delivery_price} руб.',
                        'points' => [
                            [53.69236089386018, 40.027789839984024], [53.69843723454092, 40.04172805439905], [53.697585990198654, 40.053085996030504], [53.70674437334955, 40.06674383890061],
                            [53.696549120589005, 40.08023002039376], [53.68584642416308, 40.09104113574671], [53.69124225427242, 40.107860399293], [53.70630122821887, 40.14197100431253],
                            [53.707310916481696, 40.1903819753303], [53.7355089295913, 40.260432407416225], [53.73168982526405, 40.29224091334708], [53.80056839729549, 40.52876326027679],
                            [53.94124052248736, 40.71932320830845], [54.13093636836268, 40.843726289582385], [54.17459919093682, 40.838155020520006], [54.21660610059984, 40.86554273583268],
                            [54.264599857105395, 40.864478716526506], [54.27632149627855, 40.83632348249625], [54.320332409214245, 40.905450325315556], [54.346315874504135, 41.01171396372359],
                            [54.41540627818328, 41.10879109542757], [54.50428975072968, 41.12437067690457], [54.55025543064361, 41.23103742076808], [54.64973986490998, 41.158028019262325],
                            [54.7315899799707, 41.194307742337536], [54.78947370748775, 41.18320892537373], [54.855683908978634, 41.28311584676045], [54.88995133094591, 41.31718435814703],
                            [54.91892559715242, 41.35353679068616], [54.93518402414966, 41.33463414953388], [54.942322558183555, 41.360545072610066], [54.931066673162896, 41.39203996285913],
                            [54.912978823361414, 41.40538414870628], [54.93695631182853, 41.448791776297846], [54.98066972245278, 41.458553774006575], [54.95870958470527, 41.36923665390138],
                            [54.96333366550317, 41.353073882423], [54.96005576094127, 41.34583750254614], [54.97183389973055, 41.32719166565599], [54.989063071720174, 41.26792733562574],
                            [55.01994862050022, 41.2558287292761], [55.05347358061151, 41.16777348435032], [55.04844979577965, 41.13335889899677], [55.05786233320603, 41.11855486559737],
                            [55.081086088328306, 41.031501969991396], [55.08954236179209, 40.983169003633705], [55.109413891525286, 40.92247641813545], [55.11955112950305, 40.83931000172724],
                            [55.14384689762362, 40.73005105602215], [55.13913679723798, 40.66449049292833], [55.147012543019535, 40.55223803530333], [55.148384085179934, 40.45335404072716],
                            [55.13953013609847, 40.38193586646347], [55.154766592076285, 40.280995456089485], [55.14090193658712, 40.21301403009046], [55.150139106268874, 40.16082193004557],
                            [55.16703477572992, 40.162181138158864], [55.18677893464569, 40.14775806176921], [55.200182115014435, 40.113767348769684], [55.215151149167625, 40.10861574709832],
                            [55.221527768823194, 40.0694734324274], [55.260856426466916, 40.02895782674097], [55.28862326934033, 40.07357520186847], [55.30750975195953, 40.08266960912685],
                            [55.324821234227954, 40.09176401638533], [55.349559678464, 40.08987209551875], [55.36466091685262, 40.07244664289799], [55.3765104680427, 40.04725442440012],
                            [55.38008826296097, 39.990713002651184], [55.372820870240815, 39.96035564709185], [55.37046612539803, 39.939548382176575], [55.37026207292345, 39.9262942178473],
                            [55.36399624843025, 39.912353408010205], [55.362032109678616, 39.898412598173174], [55.36269583162904, 39.88784064285877], [55.36547212317406, 39.87997974454727],
                            [55.3664883653885, 39.87177552348188], [55.36482102129669, 39.86702968278557], [55.3653047103886, 39.861597196581506], [55.36060086506344, 39.842149155325686],
                            [55.360003765144114, 39.82828010882083], [55.3603845381317, 39.822479147032794], [55.37530736187109, 39.81795541580981], [55.386945637196135, 39.803699954594926],
                            [55.38885502593928, 39.793224827136854], [55.3975058446932, 39.77562575253529], [55.412856435764844, 39.75097721108699], [55.42050389205148, 39.74373716554389],
                            [55.43234436112325, 39.723071163730864], [55.53241078746497, 39.70954799778938], [55.53796149945658, 39.7050712697676], [55.56161101678605, 39.70231115551541],
                            [55.563850155851746, 39.70504420532571], [55.56608916676099, 39.70468735035088], [55.57821094069252, 39.687516452043944], [55.56978935790185, 39.6709943430165],
                            [55.568455097898884, 39.667378799890486], [55.56783658667872, 39.659906202888024], [55.566731696728034, 39.65277692863949], [55.56532626557408, 39.62242512605302],
                            [55.56472581438903, 39.619214540518705], [55.56315253311042, 39.61583229360745], [55.56111667436806, 39.613480014957894], [55.56041852451703, 39.611188076682886],
                            [55.56002054330224, 39.60799725611562], [55.560405296315864, 39.602796956915945], [55.560595466725985, 39.592618477784654], [55.56285546701727, 39.5680373446126],
                            [55.56526877302543, 39.56227829941773], [55.567681930155835, 39.56012414313889], [55.56887909409265, 39.55385011381316], [55.56846288939131, 39.547022983563494],
                            [55.569276113437645, 39.54506854014276], [55.570137953578985, 39.54397240360681], [55.572415567403716, 39.54559959617211], [55.57397584056085, 39.545426139537255],
                            [55.5734183188778, 39.548698383251164], [55.57508467586606, 39.55067061420914], [55.57546156790625, 39.54978010163758], [55.57834866840196, 39.55594380836453],
                            [55.578187614217754, 39.551901714584396], [55.57983316711815, 39.551897688873595], [55.58313545292514, 39.55344062841076], [55.583571103712266, 39.55464125162168],
                            [55.58339999746938, 39.55592820873498], [55.58581811750407, 39.55670043332438], [55.5946584535429, 39.55343874135881], [55.59555415668694, 39.54640598145902],
                            [55.59457868539255, 39.53666955487228], [55.59223882787679, 39.53668026798289], [55.59091272797698, 39.54627181596926], [55.58894330067837, 39.544351338589166],
                            [55.587459891351266, 39.54105757019347], [55.58697219572094, 39.54090733503778], [55.58689849691811, 39.52046654835126], [55.58680056402568, 39.514037583201535],
                            [55.58287706058736, 39.511296814402826], [55.58093118794864, 39.5157566013405], [55.576554044886706, 39.511590404086306], [55.575627880015254, 39.51132609429473],
                            [55.5757691996146, 39.49993989261926], [55.57706950658796, 39.495406979354556], [55.57783491668132, 39.48782707664895], [55.57902534002685, 39.48331027660879],
                            [55.57980161973954, 39.46826852833513], [55.57720644591466, 39.41741981840872], [55.57535631637648, 39.304944674156125], [55.57287510386283, 39.28183774778177],
                            [55.57000467081866, 39.27830021838011], [55.56855855023129, 39.27611843080399], [55.56416006715767, 39.27874871938354], [55.56267973254523, 39.27828910317803],
                            [55.56066425338399, 39.278001148349425], [55.55796760297087, 39.27891482315954], [55.55327426410574, 39.27643952315383], [55.54536868580783, 39.281774815799466],
                            [55.5423772346065, 39.28178860575959], [55.53903075952972, 39.27804562255058], [55.531418770535296, 39.26115376046266], [55.52244194219372, 39.24512020525961],
                            [55.51779066920484, 39.232999381664044], [55.51209170517536, 39.22620111123809], [55.508340352186664, 39.21751456566569], [55.50434418804017, 39.21198610953066],
                            [55.50005353870453, 39.198869260737204], [55.495591880451244, 39.194003541644676], [55.47952998094337, 39.1841596426205], [55.475553495875594, 39.18410044208268],
                            [55.47138158552808, 39.18249628915235], [55.46929796746623, 39.178426226429735], [55.45965806501398, 39.17837430599446], [55.45421084415179, 39.183386396179316],
                            [55.44955883133152, 39.17967766639274], [55.442461779779194, 39.18475546697296], [55.43988868166766, 39.19004094929434], [55.43145921744938, 39.2001329501704],
                            [55.40927910499198, 39.167722917629675], [55.38708648069115, 39.08175453547953], [55.39975557986937, 39.06087978289807], [55.44619570302583, 39.0135691782658],
                            [55.48616442902071, 38.91850274313716], [55.488682452998646, 38.87699465761787], [55.49175103896821, 38.85445401764247], [55.49189568070126, 38.83946647825299],
                            [55.49915426242902, 38.81812746791626], [55.50054201763179, 38.80059150766971], [55.50332482533736, 38.79045686148018], [55.50396402427934, 38.77963556978282],
                            [55.509641884564, 38.74916236289897], [55.516585130954205, 38.71989078565383], [55.51859734737231, 38.71736909512048], [55.52060946046908, 38.712444145309775],
                            [55.51898498325821, 38.70705744148923], [55.524695711730295, 38.68461106021525], [55.53679611931491, 38.667012456602905], [55.54237772369119, 38.64693732545994],
                            [55.56955785004882, 38.60008301951233], [55.574876108029365, 38.600101519433544], [55.578222214658695, 38.57169975056375], [55.58047860616781, 38.56934350113862],
                            [55.58150951556585, 38.55786569380887], [55.58844203291178, 38.53478899107173], [55.59015797940519, 38.5194740894102], [55.590821495930044, 38.51387657510286],
                            [55.58973513117568, 38.503815864994735], [55.59983791589288, 38.46658172422774], [55.606540344854515, 38.414147362584465], [55.60716873328242, 38.3995643345594],
                            [55.62371490604625, 38.37470619096489], [55.62782437989653, 38.3634522114939], [55.6107479909728, 38.36537257715371], [55.60570553963917, 38.367942085392556],
                            [55.59545720006322, 38.37926903006374], [55.586956244412725, 38.385617794803316], [55.575817918875295, 38.388817221515794], [55.54728273524282, 38.40117786144494],
                            [55.53741255018109, 38.40474034541101], [55.528026732618414, 38.40607123147669], [55.524284814915625, 38.406614143656824], [55.49716214886224, 38.400633923512764],
                            [55.49201104086438, 38.39746517005141], [55.48724914613901, 38.39017654354325], [55.480453405595355, 38.363582994140174], [55.477901212693794, 38.35830789780499],
                            [55.47300874678346, 38.35165951045422], [55.46400223077684, 38.33870605850662], [55.458470549417235, 38.33477181086137], [55.44935674928108, 38.333351328744854],
                            [55.435417470955564, 38.33234056771634], [55.40203901010732, 38.34471193564719], [55.39716969571489, 38.34403703892965], [55.38933013557537, 38.33942643608657],
                            [55.37914331355285, 38.32794937816545], [55.372059096157535, 38.305681907830945], [55.35891105145449, 38.29182584496715], [55.35593092678535, 38.2841495916737],
                            [55.354077925849815, 38.25334756116098], [55.35848400330042, 38.175853636116976], [55.35168949728051, 38.13753582703731], [55.351226205372306, 38.11219711292723],
                            [55.344502516549, 38.08136523475461], [55.34384348463313, 38.03954702845697], [55.33809697172345, 38.01077508680778], [55.34030096503511, 37.97108398671255],
                            [55.3512675767088, 37.94346887832377], [55.353798605339904, 37.910258668951144], [55.345967592545534, 37.877517394831244], [55.34400511810775, 37.84614941172698],
                            [55.33771976605924, 37.807881458802065], [55.31614058544053, 37.81648959592101], [55.278042684467174, 37.86529156351823], [55.23849505782825, 37.86885806331764],
                            [55.21304432943346, 37.878604372687434], [55.186202207372546, 37.898993687428344], [55.16288001928479, 37.92418952072393], [55.143312813666874, 37.93280879939335],
                            [55.13770252297421, 37.93215836370726], [55.13209144013714, 37.93562780106801], [55.12480191938912, 37.93295363868017], [55.1147560825685, 37.92478631222981],
                            [55.07691116115386, 37.93880890095972], [55.0633810237345, 37.930545156630686], [55.03841215011545, 37.94219413202819], [55.00987621995387, 37.959336271488176], [54.98684811955109, 37.95587904571383], [54.85263062284919, 38.04092709574139], [54.82460861521981, 38.040735109859035], [54.77962046139058, 38.13098834512559], [54.747179599917196, 38.239731145826084], [54.57604603640714, 38.44990787383324], [54.47702874200046, 38.52962195535598], [54.4658899965563, 38.55446759887033], [54.41589857085909, 38.638943424438544], [54.40423781448943, 38.680058627732194], [54.37012848341705, 38.752759524385304], [54.33393877296486, 38.79791107355077], [54.32125113048225, 38.841086213367916], [54.3189977880173, 38.877394898106864], [54.29144570418894, 38.97962155159588], [54.26307116450425, 39.003570617194256], [54.24082932237816, 38.978893998993264], [54.21938022726304, 38.98648971965948], [54.20634661144145, 39.07294766649586], [54.032011103578434, 39.30946735036326], [53.9801987121128, 39.367302387609456], [53.90665504503943, 39.56032818259975], [53.889113165119014, 39.56256958141197], [53.87318702518361, 39.55657123413054], [53.85634265297835, 39.55528867425927], [53.84030366901917, 39.54233314075527], [53.816184351007394, 39.50407533648077], [53.77903889202969, 39.531735500956366], [53.776039108859024, 39.59922110488508], [53.82547725382528, 39.59872880354031], [53.8317723065621, 39.587146561051924], [53.837453561293444, 39.64312777176236], [53.819832934628934, 39.65720890512844], [53.78431640961694, 39.70905554142425], [53.75553407245999, 39.783223057179875], [53.74769196286639, 39.87570637823966], [53.65611065573023, 39.982952577717455], [53.69236089386018, 40.027789839984024]],
                        'property' => [
                            'fillColor' => 'rgba(255,94,89,0.12)',
                            'strokeColor' => 'rgba(255,94,89,0.22)',
                            'opacity' => 1,
                            'strokeWidth' => 0.1,
                            'zIndex' => -999,
                            'zIndexActive' => -999,
                        ]
                    ]
                ]
            ];
        } else {
            return [
                'center_point' => [55.75119082121071, 37.61699737548825],
                'locations' => [['region'=> "Московская"], ['region'=> "Москва"]],
                'regions' => [
                    [
                        'name' => 'MKAD',
                        'calculation' => [
                            'type' => 'static',
                            'cost' => OshishaDelivery::getOshishaStartCost(),
                        ],
                        'template' => 'В пределах МКАД - {delivery_price} руб.',
                        'points' => [
                            [55.77682929150693, 37.8427186924053], [55.77271261339107, 37.843152686304705],
                            [55.738276896644805, 37.84134161820584], [55.71399689835854, 37.83813880871875],
                            [55.699921267680175, 37.83078428272048], [55.6962950504132, 37.82954151435689],
                            [55.6928207993758, 37.82931794772561], [55.6892209716432, 37.829854389528585],
                            [55.66165146026852, 37.83966290527148], [55.658376283618054, 37.8394483285503],
                            [55.65605007409182, 37.838791290011436], [55.6531141363056, 37.8370746762419],
                            [55.65145113826342, 37.83568956934368], [55.64812656859308, 37.8314409502641],
                            [55.644824797922006, 37.82628977266418], [55.625585595616016, 37.79678983996685],
                            [55.62124956968963, 37.78912615774818], [55.60391627214637, 37.75711862597196],
                            [55.59919459324873, 37.74706053825473], [55.59180719241245, 37.72946947797549],
                            [55.588836348363664, 37.7225364780563], [55.575884202346515, 37.68793829096614],
                            [55.57326575851499, 37.679926824757885], [55.57229316496271, 37.67458386440024],
                            [55.571916278457984, 37.66924090404256], [55.57203486325925, 37.66469310778763],
                            [55.576012618166274, 37.59661654265479], [55.576997275315456, 37.58977417112674],
                            [55.593461027106216, 37.52076943829923], [55.5950406236937, 37.51480420545011],
                            [55.59619490389248, 37.51175721600919], [55.597166902872914, 37.509675821813644],
                            [55.59866130413232, 37.50692923978237], [55.59992481831982, 37.505169710668625],
                            [55.60066420884299, 37.50419141558768], [55.61116763612223, 37.491928885586624],
                            [55.638875974823236, 37.459586882490854], [55.659861822998046, 37.43484779763937],
                            [55.66403637567329, 37.43088149929608], [55.68274170580392, 37.41690766704496],
                            [55.68445104083821, 37.41598498714383], [55.68864009415873, 37.41437258409716],
                            [55.69086356292832, 37.41284823307507], [55.69271798296722, 37.41115307697766],
                            [55.694411609835676, 37.40906103948314], [55.69633857479258, 37.40646466115671],
                            [55.70821582138647, 37.39042283284293], [55.709960382334486, 37.388470184680074],
                            [55.71100223559, 37.387526047106846], [55.714297215701556, 37.38550902592765],
                            [55.74299678995391, 37.37085040270776], [55.74737891548303, 37.3693383084583],
                            [55.749835763080554, 37.36897352803228], [55.78212184948561, 37.36975523402037],
                            [55.78471424142089, 37.370104443868414], [55.7865400068638, 37.370812547048324],
                            [55.789647237893845, 37.37287248357179], [55.80029924148098, 37.38296043585071],
                            [55.804902293956964, 37.38656302639442], [55.80873309836682, 37.38838692852456],
                            [55.83469933158447, 37.39616684582014], [55.838100191970035, 37.39588770506112],
                            [55.84068411346117, 37.394943567487864], [55.844347068377, 37.39240249367216],
                            [55.84601308639975, 37.391908967213396], [55.847449667553015, 37.39193042488553],
                            [55.84921212285334, 37.39242395134426], [55.85763645302826, 37.39690455309926],
                            [55.860737839006916, 37.39879032715197], [55.862584159418496, 37.40035673721667],
                            [55.864949251589444, 37.40273853882189], [55.86706126571094, 37.40537841047629],
                            [55.869498474258364, 37.40936953749045], [55.871054829060206, 37.412373611587114],
                            [55.87204410730281, 37.41473395552023], [55.87320337129219, 37.41764120434771],
                            [55.875543687912774, 37.424979728212456], [55.8813305362832, 37.44392953059815],
                            [55.88207002762898, 37.44778576813208], [55.882588650864065, 37.452763948063726],
                            [55.88275750343904, 37.46081057510839], [55.88292635527642, 37.464286717991705],
                            [55.883384663688354, 37.46735516510474], [55.88551934442368, 37.47628155670629],
                            [55.888075982000466, 37.48647395096288], [55.88926982558072, 37.49010029755102],
                            [55.89215178082288, 37.496623429875235], [55.904441104424826, 37.52475156556294],
                            [55.90586346265124, 37.529643914806094], [55.90676747666915, 37.53442897568867],
                            [55.90726166205295, 37.538141152965274], [55.910865408147124, 37.57275237809345],
                            [55.911022085130945, 37.57652892838642], [55.91097387689595, 37.579554460155215],
                            [55.91063641756565, 37.58356704484148], [55.90998559481434, 37.587579629527774],
                            [55.9092021825094, 37.5910986877553], [55.90847901858254, 37.593480489360545],
                            [55.901901172883115, 37.6180182383294], [55.89891144249577, 37.63301715114069],
                            [55.89687395332799, 37.64762982585381], [55.89576474245468, 37.659367172502996],
                            [55.89456572248885, 37.69416117435827], [55.89393874366838, 37.699139354289926],
                            [55.89328763950915, 37.70195030933754], [55.89247977280019, 37.70471834904089],
                            [55.89140661030458, 37.70757221943274], [55.880130573679516, 37.73042464023962],
                            [55.8304865952908, 37.8268977445699], [55.829001074066674, 37.82968724194538],
                            [55.82757588633297, 37.831725720796705], [55.82488607061184, 37.834775327717445],
                            [55.822361493423664, 37.836706518208175], [55.82024748644772, 37.8376291981093],
                            [55.816165064041414, 37.83857287182817], [55.81242284003345, 37.83903585464755],
                            [55.803139424516395, 37.839775801016756], [55.77682929150693, 37.8427186924053]
                        ],
                        'property' => [
                            'fillColor' => 'rgba(255,94,89,0.12)',
                            'strokeColor' => 'rgba(255,94,89,0.22)',
                            'opacity' => 1,
                            'strokeWidth' => 0.1,
                            'zIndex' => -999,
                            'zIndexActive' => -999,
                        ]
                    ],
                    [
                        'name' => 'SOUTHWEST',
                        'calculation' => [
                            'type' => 'path',
                            'cost' => OshishaDelivery::getOshishaStartCost(),
                            'costKm' => OshishaDelivery::getOshishaCost()
                        ],
                        'no_markup_days' => explode(',', $this->configs['southwestdays']),
                        'points' => [[55.828543, 37.394084], [56.471988, 36.107156],
                            [56.032525, 35.669637], [55.436232, 35.785215], [54.724356, 36.478780],
                            [54.805781, 37.720554], [55.573340, 37.641119], [55.576425, 37.592249],
                            [55.595279, 37.513669], [55.600438, 37.503670], [55.660009, 37.434495],
                            [55.682509, 37.416327], [55.691595, 37.412032], [55.710099, 37.388017],
                            [55.747122, 37.369275], [55.783033, 37.369473], [55.789887, 37.371811],
                            [55.803473, 37.385317], [55.806569, 37.387237]],
                        'property' => [
                            'fillColor' => 'rgba(245, 20, 39, 0.15)',
                            'strokeColor' => 'rgba(245,20,39,0.2)',
                            'opacity' => 1,
                            'strokeWidth' => 0.1,
                            'zIndex' => -999,
                            'zIndexActive' => -999,
                            'cursor' => 'none',
                        ]
                    ],
                    [
                        'name' => 'SOUTHEAST',
                        'calculation' => [
                            'type' => 'path',
                            'cost' => OshishaDelivery::getOshishaStartCost(),
                            'costKm' => OshishaDelivery::getOshishaCost()
                        ],
                        'no_markup_days' => explode(',', $this->configs['southeastdays']),
                        'points' => [[54.805781, 37.720554], [55.573340, 37.641119],
                            [55.571919, 37.667939], [55.573081, 37.679293], [55.573631, 37.681889],
                            [55.601439, 37.752504], [55.625211, 37.796341], [55.650285, 37.834331],
                            [55.654067, 37.838116], [55.661022, 37.839846], [55.689804, 37.829573],
                            [55.697727, 37.830005], [55.714848, 37.838548], [55.773013, 37.843193],
                            [55.820846, 37.837584], [55.827411, 37.832303], [55.874911, 37.740843],
                            [56.293210, 39.639279], [55.330949, 40.117631], [54.628927, 38.942431]],
                        'property' => [
                            'fillColor' => 'rgba(0, 195, 250, 0.11)',
                            'strokeColor' => 'rgba(0,195,250,0.22)',
                            'opacity' => 1,
                            'strokeWidth' => 0.1,
                            'zIndex' => -999,
                            'zIndexActive' => -999,
                            'cursor' => 'none',
                        ]
                    ],
                    [
                        'name' => 'NORTH',
                        'calculation' => [
                            'type' => 'path',
                            'cost' => OshishaDelivery::getOshishaStartCost(),
                            'costKm' => OshishaDelivery::getOshishaCost()
                        ],
                        'no_markup_days' => explode(',', $this->configs['northdays']),
                        'points' => [[55.874911, 37.740843], [56.293210, 39.639279],
                            [56.831933, 38.606204], [56.847491, 36.954449], [56.471988, 36.107156],
                            [55.828543, 37.394084], [55.837792, 37.395910], [55.845472, 37.391980], [55.848223, 37.391827], [55.860283, 37.398411],
                            [55.863376, 37.400912], [55.867815, 37.406423], [55.872110, 37.414793],
                            [55.874687, 37.421938], [55.881872, 37.446282], [55.882760, 37.454958],
                            [55.882989, 37.464399], [55.884363, 37.471799], [55.888656, 37.488131],
                            [55.890860, 37.493949], [55.905885, 37.529228], [55.906751, 37.533863],
                            [55.911012, 37.575672], [55.910812, 37.582154], [55.910010, 37.587813],
                            [55.902166, 37.616787], [55.898083, 37.638576], [55.895973, 37.657875],
                            [55.895231, 37.672769], [55.894285, 37.697815], [55.892707, 37.704455],
                            [55.889591, 37.711817]],
                        'property' => [
                            // цвет заливки.
                            'fillColor' => 'rgba(154, 251, 0, 0.11)',
                            // цвет обводки.
                            'strokeColor' => 'rgba(154,251,0,0.22)',
                            // Прозрачность.
                            'opacity' => 1,
                            // ширина обводки.
                            'strokeWidth' => 0.1,
                            'zIndex' => -999,
                            'zIndexActive' => -999,
                            'cursor' => 'none',
                        ]
                    ]
                ]
            ];
        }
    }

    public static function getOshishaPersonTypes(){
        $arSelectPt = array("ID","NAME_WS");
        $arOrderPt = array("SORT" => "ASC");
        $arFilter = array("ACTIVE" => "Y");
        $arRuntime = array(new Entity\ExpressionField('NAME_WS', "CONCAT('(',%s,') ',%s)",array("LID","NAME")));
        $dbPersonTypes = PersonTypeTable::getList(array("select" => $arSelectPt, "order" => $arOrderPt,
            "filter" => $arFilter, "runtime" => $arRuntime));
        $arPersonTypes = array();
        while($arPersonType = $dbPersonTypes->fetch()){
            $arPersonTypes[$arPersonType["ID"]] = array("NAME" => $arPersonType["NAME_WS"]);
        }
        return $arPersonTypes;
    }

    public static function getOshishaOptionsData()
    {
        $data = array();
    }

    public static function generate($arOptions, $arConfigData)
    {
        foreach ($arOptions as $optionName => $arOption):?>
            <tr>
            <?php if ($arOption['type'] === 'news') { ?>
                <tr class="heading" dataId="<?= $arOption["id"] ?>">
                    <td colspan="2">
                        <?= $arOption["name"] ?>
                    </td>
                </tr>
            <?php } ?>
            <? if ($arOption["type"] == "NOTE"): ?>
                <td colspan="2" align="center">
                    <?= BeginNote(); ?>
                    <img src="/bitrix/js/main/core/images/hint.gif" style="margin-right: 5px;"/><?= $arOption["name"] ?>
                    <?= EndNote(); ?>
                </td>
            <? elseif ($arOption["type"] == "heading"): ?>
                <td colspan="2" class="heading">
                    <?= $arOption["name"] ?>
                </td>
            <?
            else:
                $value = isset($arConfigData[$optionName]) ? $arConfigData[$optionName] : $arOption["default"];

                if ($arOption["type"] !== 'news') {
                    ?>
                    <td class="field-name" style="width:45%"><?= $arOption["name"] ?>:</td>
                <?php } else { ?><td class="field-name" style="width:45%"></td><?php } ?>
                <td>
                    <? switch ($arOption["type"]):
                        case "text":
                        case "email":
                        case "number";
                            $arOption["name"] = $optionName;
                            $arOption["value"] = $value;
                            echo self::input($arOption, '');
                            break;
                        case "textarea":
                            $arParams = array(
                                "ATTRS" => array(
                                    "name" => $optionName
                                ),
                                "VALUE" => $value
                            );
                            echo self::pairTag($arOption["type"], $arParams);
                            break;
                        case "news":
                            $elem = '';
                            $id = $arOption["id"];
                            if ($id === 'dayDelivery') {
                                $start_json = Option::get(DeliveryHelper::$MODULE_ID, 'osh_timeDeliveryStartDay');
                                $end_json = Option::get(DeliveryHelper::$MODULE_ID, 'osh_timeDeliveryEndDay');
                            } else {
                                $start_json = Option::get(DeliveryHelper::$MODULE_ID, 'osh_timeDeliveryStartNight');
                                $end_json = Option::get(DeliveryHelper::$MODULE_ID, 'osh_timeDeliveryEndNight');
                            }

                            $start = json_decode($start_json);
                            $end = json_decode($end_json);

                            $delete = "<a href='javascript:void(0)' class='flex-align-items' 
                                        onClick='settingsDeleteRow(this)'> 
                                       <img src='/bitrix/themes/.default/images/actions/delete_button.gif' 
                                        border='0' width='20' height='20'/></a>";

                            if (empty($start) || count($start) == 0) {
                                $start[] = '';
                                $end[] = '';
                            }
                            $dayItem = $arOption["elems"][0];
                            $nightItem = $arOption["elems"][1];

                            foreach ($start as $key => $elems_start) {

                                $elem .= "<div class='flex-row d-flex padding-10'>";
                                $dayItem['value'] = $elems_start;
                                $elem .= self::input($dayItem, 'elems');

                                $nightItem['value'] = $end[$key];
                                $elem .= self::input($nightItem, 'elems');

                                $elem .= $delete;
                                $elem .= "</div>";
                            }
                            $dop_insert = "<a href='javascript:void(0)' onclick='settingsAddRights(this)' 
                                    hidefocus='true' class='button_red' dataId='$id'>Добавить поле </a>";

                            echo "<div class='flex-justify-content flex-column'><div data-type='$id' id='$id'>$elem</div>
                              <div><div class='margin-left-10'>$dop_insert</div> 
                              </div></div>";


                            break;
                        case "select":
                            if ($arOption["multiple"]) {
                                $values = explode("|", $value);
                            } else {
                                $values = [$value];
                            }
                            ?>

                            <select name="<?= $optionName ?><? if ($arOption["multiple"]): ?>[]<? endif ?>"
                                <?php if ($arOption["multiple"]): ?>
                                    multiple
                                    <?php if ($arOption["size"]): ?>
                                        size="<?php echo $arOption["size"] ?>"
                                    <? endif ?>
                                <? endif ?>
                                    <? if ($arOption["onchange"]): ?>onChange="<?= $arOption["onchange"] ?>"<? endif ?>
                            >
                                <? foreach ($arOption["options"] as $id => $text): ?>
                                    <option <? if (in_array($id, $values)) echo " selected " ?>
                                        value="<?= $id ?>"><?= $text ?></option>
                                <? endforeach ?>

                            </select>
                            <? break;
                    endswitch ?>
                    <? if (!empty($arOption["hint"])): ?>
                        <img src="/bitrix/js/main/core/images/hint.gif" style="margin-right: 5px;cursor:pointer"
                             title="<?= $arOption["hint"] ?>"
                            <? if (!empty($arOption["href"])): ?>
                                onclick="window.open('<?= $arOption["href"] ?>');"
                            <? endif ?>
                        />
                    <? endif ?>
                    <? if (!empty($arOption["link"])): ?>
                        <a href="<?= $arOption["link"]['href'] ?>" target="blank"
                           style="padding-left: 10px;"><?= $arOption["link"]['text'] ?></a>
                    <? endif ?>
                </td>
            <? endif ?>

            </tr><?
        endforeach;
    }

    static function input($arParams, string $param)
    {
        if ($param === 'elems') {
            return self::singleTag("input", $arParams);
        } else {
            return self::generateHtml("input", $arParams);
        }
    }

    public
    static function singleTag($tag, $tagParams)
    {
        $params = array();
        foreach ($tagParams as $name => $value) {
            $params[] = $name . '="' . $value . '"';
        }

        return "<$tag " . implode(" ", $params) . " class='margin-right-20' />";
    }

    public
    static function generateHtml($tagName, $tagParams)
    {
        $params = array();
        foreach ($tagParams as $name => $value) {
            $params[] = $name . '="' . $value . '"';
        }

        return "<{$tagName} " . implode(" ", $params) . " />";
    }

    protected function connect()
    {

    }

    /**
     * @param string $city_name
     * @param array $result_array
     * @param array $id_feature
     * @param string $code_city
     * @return void
     * @throws ArgumentException
     * @throws ObjectPropertyException
     * @throws SystemException
     */
    public function getPVZ(string $city_name, array &$result_array, int &$id_feature, string $code_city, array $packages, $dimensionsHash, $sumDimensions)
    {
        $params = ['filter' => [
            'ACTIVE' => 'Y',
            'ISSUING_CENTER' => 'Y',
            '!=GPS_N' => '0',
            '!=GPS_S' => '0',
            'SITE_ID' => SITE_ID]];
        $rsRes = StoreTable::getList($params);

        while ($arStore = $rsRes->fetch()) {
            $features_obj = [];
            $features_obj['type'] = 'Feature';
            $features_obj['id'] = $id_feature;
            $id_feature += 1;
            $features_obj['geometry'] = [
                'type' => 'Point',
                'coordinates' => [
                    $arStore['GPS_N'],
                    $arStore['GPS_S']
                ]
            ];

            $features_obj['properties'] = [
                'code_pvz' => $arStore['ID'],
                'type' => 'PVZ',
                'fullAddress' => $arStore['ADDRESS'],
                'comment' => $arStore['DESCRIPTION'],
                'deliveryName' => 'OSHISHA',
                'iconCaption' => 'OSHISHA',
                'hintContent' => $arStore['ADDRESS'],
                'openEmptyBalloon' => true,
                'clusterCaption' => 'OSHISHA',
            ];

            $features_obj['options'] = [
                'iconImageSize' => [64, 64],
                'iconImageOffset' => [-30, -60],
                'iconLayout'=> 'default#imageWithContent',
                'iconImageHref'=> '/bitrix/modules/enterego.pvz/assets/images/osh.png',
            ];

            $result_array[] = $features_obj;
        }
    }

    public function getPrice($array)
    {
        return 0;
    }

    /** Рассчитывает следующий день без доставки
     * @param $noMarkUpDays
     * @return string
     */
    public function getNextNoMarkupDate($noMarkUpDays): string
    {
        $tempDate = '';
        foreach ($noMarkUpDays as $noMarkupDay) {
            if ($tempDate) {
                if ((new \DateTime('now'))->modify('next '.DeliveryHelper::getDayOfTheWeekString($noMarkupDay)) < $tempDate) {
                    $tempDate = (new \DateTime('now'))->modify('next '.DeliveryHelper::getDayOfTheWeekString($noMarkupDay));
                }
            } else {
                $tempDate = (new \DateTime('now'))->modify('next '.DeliveryHelper::getDayOfTheWeekString($noMarkupDay));
            }
        }
        return $tempDate->format('d.m.Y');
    }

    public function getPriceDoorDelivery($params)
    {
        try {
            $limitBasket = self::getOshishaLimitBasket();
            $moreThanLimit = intval($params['shipment_cost']) >= $limitBasket;
            $hashed_values = array($params['latitude'], $params['longitude'], $params['date_delivery'],
                $this->configs['northdays'], $this->configs['southeastdays'], $this->configs['southwestdays'],
                $moreThanLimit);
            $hash_string = md5(implode('', $hashed_values));

            $is_cache_on = Option::get(DeliveryHelper::$MODULE_ID, 'Common_iscacheon');

            $cache = \Bitrix\Main\Data\Cache::createInstance(); // получаем экземпляр класса
            if ($cache->initCache(3600, $this->oshisha_cache_id)) { // проверяем кеш и задаём настройки
                if ($is_cache_on == 'Y') {
                    $cached_vars = $cache->getVars();
                    if (!empty($cached_vars)) {
                        foreach ($cached_vars as $varKey => $var) {
                            if ($varKey === $hash_string) {
                                return $var;
                            }
                        }
                    }
                }
            }

            if (!empty($params['latitude']) && !empty($params['longitude'])) {
                $point = OshishaSavedDeliveriesTable::getRow(array('filter' => array(
                    'LATITUDE'  =>  number_format($params['latitude'], 4, '.', ''),
                    'LONGITUDE' => number_format($params['longitude'], 4, '.', '')
                )));
            } else {
                $point = null;
            }
            if ($point) {
                $dayDateDelivery = $params['date_delivery'] ? date('w' ,strtotime($params['date_delivery']))
                    : date('w', strtotime('+1 day'));
                $itBigOrder = intval($params['shipment_cost']) >= $limitBasket;
                $distance = ceil(($point['DISTANCE'] ?? 0) - 0.8);
                $noMarkup = false;
                $nextNoMarkup = false;
                $typeCalculation = '';
                $costKm = 0;
                $cost = 0;

                $deliveryRegions = self::getOshishaDeliveryRegions();
                foreach ($deliveryRegions['regions'] as $region) {
                    if ($point['ZONE'] === $region['name']) {
                        $cost = $region['calculation']['cost'];
                        $costKm = $region['calculation']['costKm'] ?? 0;
                        $typeCalculation = $region['calculation']['type'];

                        if (!empty($region['no_markup_days'])) {
                            foreach ($region['no_markup_days'] as $noMarkupDay) {
                                if ($noMarkupDay == $dayDateDelivery) {
                                    $noMarkup = true;
                                }
                            }
                            $nextNoMarkup = $this->getNextNoMarkupDate($region['no_markup_days']);
                        }
                    }
                }

                if ($typeCalculation === 'static') {
                    $delivery_price = $itBigOrder ? 0 : $cost;
                } elseif ($typeCalculation === 'path') {
                    if ($noMarkup) {
                        $delivery_price = $itBigOrder ? 0 : $cost;
                    } else {
                        $delivery_price = $itBigOrder
                            ? max($distance - 5, 0) * $costKm
                            : $cost + $distance * $costKm;
                    }
                } else {
                    $this->errors[] = 'Не корректный формат расчетов';
                    return array('errors' => $this->errors);
                }

                $priceArr = array('price' => $delivery_price, 'noMarkup' => $nextNoMarkup);

                $cache->forceRewriting(true);
                if ($cache->startDataCache()) {
                    $cache->endDataCache((isset($cached_vars) && !empty($cached_vars))
                        ? array_merge($cached_vars, array($hash_string => $priceArr))
                        : array($hash_string => $priceArr));
                }
                return $priceArr;
            } else {
                $this->errors[] = 'no data found on point';
                return array('errors' => $this->errors);
            }
        } catch(\Throwable $e) {
            $this->errors[] = $e->getMessage();
            return array('errors' => $this->errors);
        }
    }
}